title: $:/language/Help/fetch
description: Ανακαλεί tiddlers από το wiki μέσω URL

Φέρνει ένα ή περισσότερα αρχεία μέσω HTTP/HTTPS, και εισάγει τα tiddler που ταιριάζουν σε ένα φίλτρο, προαιρετικά μετασχηματίζει τους εισερχόμενους τίτλους.

```
--fetch file <url> <import-filter> <transform-filter>
--fetch files <url-filter> <import-filter> <transform-filter>
```

Με την "file" εκδοχή ανακαλείτε μόνο ένα μεμονωμένο αρχείο και η πρώτη παράμετρος είναι το URL του αρχείου που θα διαβαστεί.

Με την "files" εκδοχή, πολλαπλά αρχεία ανακαλούνται πολλαπλά αρχεία και η πρώτη παράμετρος είναι ένα φίλτρο που αποδίδει μια λίστα από URL των αρχείων που θα ανακληθούν. Για παράδειγμα, αν θεωρήσουμε ένα σύνολο από tiddler που έχουν ετικέτα "remote-server" τα οποία έχουν ένα πεδίο "url" το φίλτρο  `[tag[remote-server]get[url]]` θα επιστρέψει όλα τα διαθέσιμα URL.

Η παράμετρος `<import-filter>` καθορίζει ένα φίλτρο που προσδιορίζει ποια tiddlers θα εισαχθούν. Αν δεν καθοριστεί έχει αρχική τιμή `[all[tiddlers]]`.

Η παράμετρος `<transform-filter>` καθορίζει ένα προαιρετικό φίλτρο που μετασχηματίζει τους τίτλους των εισαγόμενων tiddlers. Για παράδειγμα , `[addprefix[$:/myimports/]]` θα προσθέσει το πρόθεμα  `$:/myimports/` σε κάθε τίτλο.

Αν πριν την  `--fetch` εντολή υπάρχει η  `--verbose` τότε θα εμφανίσει πληροφορίες σχετικά με την πρόοδο κατά την εισαγωγή.

Σημειώστε ότι το TiddlyWiki δεν θα ανακαλέσει μια παλαιότερη έκδοση ενός ήδη φορτωμένου πρόσθετου.

Το ακόλουθο παράδειγμα ανακαλεί όλα τα μη-συστεμικά tiddlers από το http://tiddlywiki.com και τα αποθηκεύει σε ένα JSON αρχείο:

```
tiddlywiki --verbose --fetch file "http://tiddlywiki.com/" "[!is[system]]" "" --rendertiddler "$:/core/templates/exporters/JsonFile" output.json text/plain "" exportFilter "[!is[system]]"
```

